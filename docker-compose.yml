version: '2'
services:
    dsenv:
        image: "${DS_IMAGE}"
        hostname: dev
        # see http://blog.johngoulah.com/2016/03/running-strace-in-docker/
        security_opt:
          - seccomp:unconfined
        dns: "${DS_DNS}"
        ports:
          - 9009:9009
          - 8888:8080
          - 8008:8008
          # For Majestic testing UI
          - 4000:4000
        volumes:
          - ${DS_HOME}:/home/dev
          - ${HOME}/Applications:/home/dev/Applications
          - ${HOME}/.gnupg:/home/dev/.gnupg
          - ${HOME}/.ssh:/home/dev/.ssh
          - /tmp/.X11-unix:/tmp/.X11-unix:rw
          - /usr/bin/docker:/bin/docker:rw
          - /var/run/docker.sock:/run/docker.sock:rw
          - ${SSH_AUTH_SOCK}:/ssh-agent
        environment:
          - DISPLAY=${DISPLAY}
          - SSH_AUTH_SOCK=/ssh-agent
          - TMUX=${TMUX}

    discourse:
        image: registry.cloud.icij.org/discourse_dev:latest
        command: ["/sbin/boot"]
        container_name: discourse_dev
        restart: always
        ports:
          - 1080:1080
          - 3000:3000
        volumes:
          - ${DS_HOME}:/home/discourse
          - ${HOME}/Applications:/home/discourse/Applications
          - ${HOME}/.gnupg:/home/discourse/.gnupg
          - ${HOME}/.ssh:/home/discourse/.ssh
          - /tmp/.X11-unix:/tmp/.X11-unix:rw
          - /usr/bin/docker:/bin/docker:rw
          - /var/run/docker.sock:/run/docker.sock:rw
          - ${SSH_AUTH_SOCK}:/ssh-agent
        environment:
          - DISPLAY=${DISPLAY}
          - SSH_AUTH_SOCK=/ssh-agent
          - TMUX=${TMUX}

    preview:
        image: icij/datashare-preview:0.7.1
        ports:
          - 5000:5000
        volumes:
          - /tmp/.X11-unix:/tmp/.X11-unix
        environment:
          - DS_HOST=http://dsenv:8080
          - DISPLAY=${DISPLAY}

    redis:
        image: redis:4.0.1-alpine

    xemx:
        image: icij/xemx:3.4.0
        ports:
          - 3001:3001
        environment:
          XEMX_HOST: xemx
          RAILS_ENV: development
          DATABASE_URL: 'mysql2://root:root@mysql:3306/xemx_development'
          TEST_DATABASE_URL: 'mysql2://root:root@mysql:3306/xemx_test'
          LDAP_HOST: openldap
          LDAP_PORT: 389
          LDAP_BASE_DN: dc=icij,dc=org
          LDAP_ADMIN_USER: cn=admin,dc=icij,dc=org
          LDAP_ADMIN_PASSWORD: admin
          WAIT_HOSTS: openldap:389

    mysql:
        image: mysql
        command: --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: xemx_development

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.1
        environment:
          - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
          - "discovery.type=single-node"
          - "cluster.name=datashare"
          - "http.compression=false"
          - "http.cors.enabled=true"
          - "http.cors.allow-origin=*"
          - "http.cors.allow-methods=OPTIONS, HEAD, GET, POST, PUT, DELETE"
        ports:
          - "9200:9200"

    openldap:
        image: icij/openldap
        environment:
          LDAP_READONLY_USER: "false"
          LDAP_LOG_LEVEL: 128
          LDAP_DOMAIN: icij.org
          LDAP_BASE_DN: dc=icij,dc=org
          LDAP_ADMIN_USER: cn=admin,dc=icij,dc=org
          LDAP_ADMIN_PASSWORD: admin
          LDAP_ORGANISATION: ICIJ
          LDAP_RFC2307BIS_SCHEMA: "false"
          LDAP_BACKEND: mdb
          LDAP_TLS: "false"
          LDAP_REPLICATION: "false"
          KEEP_EXISTING_CONFIG: "false"
          LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
          LDAP_SSL_HELPER_PREFIX: ldap
          tty: "true"
          stdin_open: "true"

    postgres:
        image: postgres:11.2
        environment:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
